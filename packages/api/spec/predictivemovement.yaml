openapi: 3.0.0
servers:
  - url: http://localhost:8000
info:
  description: |
    This is the OpenAPI for Predictive Movement.
  version: 1.0.0-oas3
  title: Predictive Movement API
  contact:
    email: predictivemovement@iteam.se
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
paths:
  /transports:
    get:
      operationId: get_transports
      summary: Get all the transports to which you have access
      responses:
        "200":
          description: OK
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transport"
  /itinerary/{transport_id}:
    get:
      operationId: get_itinerary
      summary: Get an itinerary by transport ID
      parameters:
        - name: transport_id
          in: path
          description: ID of the transport to which the itinerary is assigned
          required: true
          schema:
            type: string
          example: "pmv-2314"
      responses:
        "200":
          description: OK
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Itinerary"
  /get_plan:
    get:
      operationId: get_plan
      responses:
        200:
          description: OK
          content:
            application/json; charset=utf-8:
              schema:
                type: string

components:
  schemas:
    Activity:
      type: object
      properties:
        id:
          nullable: false
          type: string
        booking_id:
          type: string
        distance:
          type: number
        duration:
          type: number
        type:
          type: string
          enum: [start, end, pickup, delivery]
        position:
          $ref: "#/components/schemas/Position"
      required:
        - id
        - booking_id
        - distance
        - duration
        - type
        - position
    Address:
      type: object
      properties:
        city:
          type: string
        street:
          type: string
        name:
          type: string
        position:
          $ref: "#/components/schemas/Position"
      required:
        - position
    Dimensions:
      type: object
      properties:
        width:
          type: number
        length:
          type: number
        height:
          type: number
    Transport:
      type: object
      properties:
        transport_id:
          type: string
        busy:
          type: boolean
        capacity:
          type: object
          properties:
            volume:
              type: number
            weight:
              type: number
        earliest_start:
          type: string
          format: date-time
        latest_end:
          type: string
          format: date-time
        metadata:
          type: object
        start_address:
          $ref: "#/components/schemas/Address"
        end_address:
          $ref: "#/components/schemas/Address"
    Booking:
      type: object
      properties:
        id:
          type: string
          format: int64
        tripId:
          type: integer
          format: int64
        delivery:
          $ref: "#/components/schemas/Address"
        pickup:
          $ref: "#/components/schemas/Address"
        details:
          properties:
            schema:
              $ref: "#/components/schemas/BookingDetails"
        ship_date:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
          default: false
      xml:
        name: Order
      required:
        - id
        - tripId
        - quantity
        - shipDate
        - status
        - complete
    BookingDetails:
      type: object
      properties:
        metadata:
          type: object
          properties:
            cargo:
              type: string
            fragile:
              type: boolean
              default: false
            recipient:
              type: object
              properties:
                contact:
                  type: string
                name:
                  type: string
                info:
                  type: string
            sender:
              type: object
              properties:
                contact:
                  type: string
                name:
                  type: string
                info:
                  type: string
        weight:
          type: number
        volume:
          type: number
        dimensions:
          $ref: "#/components/schemas/Dimensions"
        loading_meters:
          type: number
        quantity:
          type: integer
          format: int32
    Position:
      type: object
      required:
        - lon
        - lat
      properties:
        lon:
          type: number
          format: float
        lat:
          type: number
          format: float
    Plan:
      type: object
    Itinerary:
      type: object
      properties:
        transport_id:
          type: string
        route:
          type: object
        activities:
          type: array
          items:
            $ref: "#/components/schemas/Activity"
      xml:
        name: Trips
      required:
        - transport_id
        - route
        - activities
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
