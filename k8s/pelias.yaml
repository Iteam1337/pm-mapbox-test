---
# Source: pelias/templates/configmap.tpl
apiVersion: v1
kind: ConfigMap
metadata:
  name: pelias-json-configmap
  namespace: predictivemovement
data:
  pelias.json: |
    {
      "esclient": {
        "hosts": [{
          "host": "elasticsearch",
          "port": 9200,
          "protocol": "http"
        }]
      },
      "elasticsearch": {
        "settings": {
          "index": {
            "number_of_replicas": "0",
            "number_of_shards": "12",
            "refresh_interval": "1m"
          }
        }
      },
      "api": {
        "accessLog": "common",
        "autocomplete": {
          "exclude_address_length": 0
        },
        "attributionURL": "http://api.yourpelias.com/attribution",
        "indexName": "pelias",
        
        "services": {
          
          "placeholder": {
            "url": "http://pelias-placeholder-service:3000/",
            "retries": 1,
            "timeout": 5000
          },
          "pip": {
            "url": "http://pelias-pip-service:3102/",
            "retries": 1,
            "timeout": 5000
          },
          "libpostal": {
            "url": "http://pelias-libpostal-service:4400/",
            "retries": 1,
            "timeout": 5000
          }
        }
      },
      "acceptance-tests": {
        "endpoints": {
          "local": "http://pelias-api-service:3100/v1/"
        }
      },
      "logger": {
        "level": "info",
        "json": true,
        "timestamp": true
      },
      "imports": {
        "adminLookup": {
            "enabled": true,
            "maxConcurrentReqs": 20
        },
        "services": {
          "pip": {
            "url": "http://pelias-pip-service:3102",
            "timeout": 5000
          }
        },
        "geonames": {
          "datapath": "/data/geonames",
          "countryCode": "ALL"
        },
        "openaddresses": {
          "datapath": "/data/openaddresses",
          "files": []
        },
        "openstreetmap": {
          "download": [{
              "sourceURL": "https://planet.openstreetmap.org/pbf/planet-latest.osm.pbf"
          }],
          "datapath": "/data/openstreetmap",
          "import": [{
            "filename": "planet-latest.osm.pbf"
          }]
        },
        "polyline": {
          "datapath": "/data/polylines",
          "files": ["extract.0sv"]
        },
        "whosonfirst": {
          "sqlite": false,
          
          "importVenues": false,
          "importPostalcodes": true,
          "datapath": "/data/whosonfirst"
        }
      }
    }
---
# Source: pelias/templates/api-service.tpl
apiVersion: v1
kind: Service
metadata:
  name: pelias-api-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
spec:
  selector:
    app-group: pelias-api
  ports:
    - protocol: TCP
      port: 3100
  type: ClusterIP
---
# Source: pelias/templates/dashboard-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: pelias-dashboard-service
spec:
  selector:
    app: pelias-dashboard
  ports:
    - protocol: TCP
      port: 3030
  type: ClusterIP
---
# Source: pelias/templates/libpostal-service.tpl
apiVersion: v1
kind: Service
metadata:
  name: pelias-libpostal-service
  namespace: predictivemovement
spec:
  selector:
    app: pelias-libpostal
  ports:
    - protocol: TCP
      port: 4400
  type: ClusterIP
---
# Source: pelias/templates/pip-service.tpl
apiVersion: v1
kind: Service
metadata:
  name: pelias-pip-service
spec:
  selector:
    app: pelias-pip
  ports:
    - protocol: TCP
      port: 3102
  type: ClusterIP
---
# Source: pelias/templates/placeholder-service.tpl
apiVersion: v1
kind: Service
metadata:
  name: pelias-placeholder-service
spec:
  selector:
    app: pelias-placeholder
  ports:
    - protocol: TCP
      port: 3000
  type: ClusterIP
---
# Source: pelias/templates/api-deployment.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pelias-api
  namespace: predictivemovement
spec:
  replicas: 1
  minReadySeconds: 10
  selector:
    matchLabels:
      app: pelias-api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: pelias-api
        app-group: pelias-api
      annotations:
        image: pelias/api:latest
        checksum/config: 1faf321dba4e575e57fd4a89cfcd6c58cb0457befa55a1278cb666a6f23837f7
        elasticsearch: elasticsearch
    spec:
      containers:
        - name: pelias-api
          image: pelias/api:latest
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          env:
            - name: PELIAS_CONFIG
              value: "/etc/config/pelias.json"
          resources:
            limits:
              memory: 0.5Gi
              cpu: 1.5
            requests:
              memory: "0.25Gi"
              cpu: "0.1"
      volumes:
        - name: config-volume
          configMap:
            name: pelias-json-configmap
            items:
              - key: pelias.json
                path: pelias.json
      nodeSelector: {}
---
# Source: pelias/templates/dashboard-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pelias-dashboard
  namespace: predictivemovement
spec:
  replicas: 1
  minReadySeconds: 1
  selector:
    matchLabels:
      app: pelias-dashboard
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: pelias-dashboard
    spec:
      containers:
        - name: pelias-dashboard
          image: pelias/dashboard:latest
          env:
            - name: AUTH_TOKEN
              value: "foo"
            - name: ES_ENDPOINT
              value: http://elasticsearch:9200/
          resources:
            limits:
              memory: 0.2Gi
              cpu: 0.25
            requests:
              memory: 0.2Gi
              cpu: 0.01
      nodeSelector: {}
---
# Source: pelias/templates/health-logger-deployment.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pelias-elasticsearch-healthlogger
  namespace: predictivemovement
spec:
  replicas: 0
  minReadySeconds: 1
  selector:
    matchLabels:
      app: pelias-healthlogger
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: pelias-healthlogger
      annotations:
        image: pelias/elasticsearch-health-logger:latest
        elasticsearch: elasticsearch
    spec:
      containers:
        - name: pelias-healthlogger
          image: pelias/elasticsearch-health-logger:latest
          resources:
            limits:
              memory: 0.5Gi
              cpu: 0.5
            requests:
              memory: "100Mi"
              cpu: "0.1"
          env:
            - name: ELASTICSEARCH_HOST
              value: "elasticsearch:9200"
            - name: WATCH_INTERVAL
              value: "60"
      nodeSelector: {}
---
# Source: pelias/templates/interpolation-deployment.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pelias-interpolation
  namespace: predictivemovement
spec:
  replicas: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app: pelias-interpolation
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: pelias-interpolation
      annotations:
    spec:
      initContainers:
        - name: download
          image: pelias/interpolation:latest
          env:
            - name: DOWNLOAD_PATH
              value: "https://s3.amazonaws.com/pelias-data.nextzen.org/portland-metro/interpolation"
          command:
            [
              "sh",
              "-c",
              "mkdir -p /data/interpolation/ && wget -O - $DOWNLOAD_PATH/street.db.gz | gunzip > /data/interpolation/street.db & wget -O - $DOWNLOAD_PATH/address.db.gz | gunzip > /data/interpolation/address.db\n",
            ]
          volumeMounts:
            - name: data-volume
              mountPath: /data
          resources:
            limits:
              memory: 3Gi
              cpu: 2
              ephemeral-storage: 5Gi
            requests:
              memory: 512Mi
              cpu: 0.1
              ephemeral-storage: 5Gi
      containers:
        - name: pelias-interpolation
          image: pelias/interpolation:latest
          volumeMounts:
            - name: data-volume
              mountPath: /data
            - name: config-volume
              mountPath: /etc/config
          env:
            - name: PELIAS_CONFIG
              value: "/etc/config/pelias.json"
          resources:
            limits:
              memory: 3Gi
              cpu: 2
              ephemeral-storage: 5Gi
            requests:
              memory: "2Gi"
              cpu: "0.1"
              ephemeral-storage: 5Gi
      volumes:
        - name: data-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: pelias-json-configmap
            items:
              - key: pelias.json
                path: pelias.json
      nodeSelector: {}
---
# Source: pelias/templates/libpostal-deployment.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pelias-libpostal
  namespace: predictivemovement
spec:
  replicas: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app: pelias-libpostal
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: pelias-libpostal
      annotations:
    spec:
      containers:
        - name: pelias-libpostal
          image: pelias/libpostal-service:latest
          resources:
            limits:
              memory: 3Gi
              cpu: 1.5
            requests:
              memory: 2Gi
              cpu: 0.1
          livenessProbe:
            httpGet:
              path: /parse?address=readiness
              port: 4400
          readinessProbe:
            httpGet:
              path: /parse?address=readiness
              port: 4400
      nodeSelector: {}
---
# Source: pelias/templates/pip-deployment.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pelias-pip
  namespace: predictivemovement
spec:
  replicas: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app: pelias-pip
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: pelias-pip
      annotations:
    spec:
      initContainers:
        - name: download
          image: pelias/pip-service:latest
          command: ["sh", "-c", "./bin/download --admin-only"]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: data-volume
              mountPath: /data
          env:
            - name: PELIAS_CONFIG
              value: "/etc/config/pelias.json"
          resources:
            limits:
              memory: 3Gi
              cpu: 4
              ephemeral-storage: 35Gi
            requests:
              memory: 1Gi
              cpu: 0.1
              ephemeral-storage: 35Gi
      containers:
        - name: pelias-pip
          image: pelias/pip-service:latest
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: data-volume
              mountPath: /data
          env:
            - name: PELIAS_CONFIG
              value: "/etc/config/pelias.json"
          resources:
            limits:
              memory: 10Gi
              cpu: 3
              ephemeral-storage: 35Gi
            requests:
              memory: "5Gi"
              cpu: "0.1"
              ephemeral-storage: 35Gi
          readinessProbe:
            httpGet:
              path: /12/12
              port: 3102
            initialDelaySeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: pelias-json-configmap
            items:
              - key: pelias.json
                path: pelias.json
        - name: data-volume
          emptyDir: {}
      nodeSelector: {}
---
# Source: pelias/templates/placeholder-deployment.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pelias-placeholder
  namespace: predictivemovement
spec:
  replicas: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app: pelias-placeholder
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: pelias-placeholder
      annotations:
    spec:
      initContainers:
        - name: download
          image: pelias/placeholder:latest
          env:
            - name: DOWNLOAD_URL
              value: "https://s3.amazonaws.com/pelias-data.nextzen.org/portland-metro/placeholder/store.sqlite3.gz"
          command:
            [
              "sh",
              "-c",
              "mkdir -p /data/placeholder/ && wget -O- \"$DOWNLOAD_URL\" | gunzip > /data/placeholder/store.sqlite3\n",
            ]
          volumeMounts:
            - name: data-volume
              mountPath: /data
          resources:
            limits:
              memory: 1Gi
              cpu: 1.1
              ephemeral-storage: 5Gi
            requests:
              memory: 100Mi
              cpu: 0.2
              ephemeral-storage: 5Gi
      containers:
        - name: pelias-placeholder
          image: pelias/placeholder:latest
          volumeMounts:
            - name: data-volume
              mountPath: /data
          env:
            - name: PLACEHOLDER_DATA
              value: "/data/placeholder/"
            - name: CPUS
              value: "1"
          resources:
            limits:
              memory: 1Gi
              cpu: 2
              ephemeral-storage: 5Gi
            requests:
              memory: "512Mi"
              cpu: "0.1"
              ephemeral-storage: 5Gi
      volumes:
        - name: data-volume
          emptyDir: {}
      nodeSelector: {}
