/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/transports": {
    /** Gets all the transports to which you have access */
    get: {
      responses: {
        /** OK */
        200: {
          "application/json": components["schemas"]["Transport"][];
        };
      };
    };
  };
  "/itinerary": {
    get: {
      parameters: {
        query: {
          /** ID of the transport to which the itinerary is assigned */
          transportId: string;
        };
      };
      responses: {
        /** OK */
        200: {
          "application/json": components["schemas"]["Itinerary"];
        };
      };
    };
  };
  "/activity/{activity_id}/complete": {
    post: {
      responses: {
        /** OK */
        204: {
          "application/json": components["schemas"]["ApiResponse"];
        };
      };
    };
  };
  "/activity/{activity_id}/fail": {
    post: {
      requestBody: {
        "application/json": {
          reason?: string;
        };
      };
      responses: {
        /** OK */
        204: {
          "application/json": components["schemas"]["ApiResponse"];
        };
      };
    };
  };
  "/me": {
    get: {
      responses: {
        /** OK */
        200: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  "/users": {
    /** Create a new user */
    post: {
      requestBody: {};
      responses: {
        /** OK */
        200: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
}

export interface operations {}

export interface components {
  schemas: {
    Auth: {
      token?: string;
    };
    Activity: {
      id?: string;
      booking_id?: string;
      distance?: number;
      duration?: number;
      type?: "start" | "end" | "pickup" | "delivery";
      address?: {
        lat?: number;
        lon?: number;
      };
    };
    Transport: {
      transport_id?: string;
      busy?: boolean;
      capacity?: {
        volume?: number;
        weight?: number;
      };
      earliestStart?: string;
      latestEnd?: string;
      metadata?: { [key: string]: any };
      startAddress?: {
        city?: string;
        street?: string;
        name?: string;
        lon?: number;
        lat?: number;
      };
      endAddress?: {
        city?: string;
        street?: string;
        name?: string;
        lon?: number;
        lat?: number;
      };
    };
    Booking: {
      id: string;
      tripId: number;
      quantity: number;
      shipDate: string;
      /** Order Status */
      status: "placed" | "approved" | "delivered";
      complete: boolean;
    };
    User: {
      id: number;
      username: string;
      firstName: string;
      lastName: string;
      email: string;
      password?: string;
      phone: string;
    };
    Place: {
      position: components["schemas"]["Position"];
      address?: string;
    };
    Position: {
      lon: number;
      lat: number;
    };
    Plan: { [key: string]: any };
    Itinerary: {
      transport_id: string;
      route: { [key: string]: any };
      activities: components["schemas"]["Activity"][];
    };
    ApiResponse: {
      code?: number;
      type?: string;
      message?: string;
    };
  };
}
